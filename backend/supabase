-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.dish_categories (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL UNIQUE,
  description text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT dish_categories_pkey PRIMARY KEY (id)
);
CREATE TABLE public.dish_category_relations (
  dish_id uuid NOT NULL,
  category_id uuid NOT NULL,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT dish_category_relations_pkey PRIMARY KEY (id),
  CONSTRAINT dish_category_relations_category_id_fkey FOREIGN KEY (category_id) REFERENCES public.dish_categories(id),
  CONSTRAINT dish_category_relations_dish_id_fkey FOREIGN KEY (dish_id) REFERENCES public.dishes(id)
);
CREATE TABLE public.dish_collection_items (
  collection_id uuid,
  dish_id uuid,
  user_id uuid,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  added_at timestamp with time zone DEFAULT now(),
  CONSTRAINT dish_collection_items_pkey PRIMARY KEY (id),
  CONSTRAINT dish_collection_items_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id),
  CONSTRAINT dish_collection_items_collection_id_fkey FOREIGN KEY (collection_id) REFERENCES public.dish_collections(id),
  CONSTRAINT dish_collection_items_dish_id_fkey FOREIGN KEY (dish_id) REFERENCES public.dishes(id)
);
CREATE TABLE public.dish_collections (
  user_id uuid NOT NULL,
  name character varying NOT NULL,
  description text,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  is_default boolean DEFAULT false,
  collection_type character varying DEFAULT 'custom'::character varying CHECK (collection_type::text = ANY (ARRAY['custom'::character varying::text, 'my_dishes'::character varying::text, 'liked'::character varying::text, 'published'::character varying::text, 'private'::character varying::text])),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  system_type character varying CHECK (system_type::text = ANY (ARRAY['my_dishes'::character varying, 'liked'::character varying, 'published'::character varying, 'private'::character varying]::text[])),
  is_public boolean DEFAULT false,
  owner_id uuid,
  CONSTRAINT dish_collections_pkey PRIMARY KEY (id),
  CONSTRAINT dish_collections_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id),
  CONSTRAINT dish_collections_owner_id_fkey FOREIGN KEY (owner_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.dish_comments (
  dish_id uuid NOT NULL,
  user_id uuid NOT NULL,
  content text NOT NULL,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  is_deleted boolean DEFAULT false,
  CONSTRAINT dish_comments_pkey PRIMARY KEY (id),
  CONSTRAINT dish_comments_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id),
  CONSTRAINT dish_comments_dish_id_fkey FOREIGN KEY (dish_id) REFERENCES public.dishes(id)
);
CREATE TABLE public.dish_ingredients (
  dish_id uuid NOT NULL,
  name character varying NOT NULL,
  amount numeric NOT NULL,
  unit character varying NOT NULL,
  edamam_food_id character varying,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  order_index integer NOT NULL DEFAULT 0,
  CONSTRAINT dish_ingredients_pkey PRIMARY KEY (id),
  CONSTRAINT dish_ingredients_dish_id_fkey FOREIGN KEY (dish_id) REFERENCES public.dishes(id)
);
CREATE TABLE public.dish_ratings (
  dish_id uuid NOT NULL,
  user_id uuid NOT NULL,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  rating_type integer NOT NULL CHECK (rating_type = ANY (ARRAY[0, 1])),
  CONSTRAINT dish_ratings_pkey PRIMARY KEY (id),
  CONSTRAINT dish_ratings_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id),
  CONSTRAINT dish_ratings_dish_id_fkey FOREIGN KEY (dish_id) REFERENCES public.dishes(id)
);
CREATE TABLE public.dish_steps (
  dish_id uuid NOT NULL,
  step_number integer NOT NULL,
  description text NOT NULL,
  image_url text,
  duration_minutes integer,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT dish_steps_pkey PRIMARY KEY (id),
  CONSTRAINT dish_steps_dish_id_fkey FOREIGN KEY (dish_id) REFERENCES public.dishes(id)
);
CREATE TABLE public.dishes (
  user_id uuid NOT NULL,
  title character varying NOT NULL,
  description text,
  main_image_url text,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  servings integer NOT NULL DEFAULT 1,
  status character varying DEFAULT 'pending'::character varying,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  moderated_at timestamp with time zone,
  rejection_reason text,
  CONSTRAINT dishes_pkey PRIMARY KEY (id),
  CONSTRAINT dishes_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.profiles(id)
);
CREATE TABLE public.profiles (
  id uuid NOT NULL,
  email character varying NOT NULL UNIQUE,
  full_name character varying,
  avatar_url character varying,
  role text DEFAULT 'user'::text CHECK (role = ANY (ARRAY['user'::text, 'admin'::text])),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  profile_tag character varying UNIQUE,
  CONSTRAINT profiles_pkey PRIMARY KEY (id),
  CONSTRAINT profiles_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id)
);